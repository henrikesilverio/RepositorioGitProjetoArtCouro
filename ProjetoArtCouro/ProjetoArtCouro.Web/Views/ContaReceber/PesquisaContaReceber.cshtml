@model ProjetoArtCouro.Model.Models.ContaReceber.PesquisaContaReceberModel
@using ProjetoArtCouro.Resource.Resources
@using ProjetoArtCouro.Web.Infra.Extensions

<div class="jarviswidget jarviswidget-sortable"
     data-widget-editbutton="true" data-widget-colorbutton="true"
     data-widget-fullscreenbutton="true" data-widget-collapsed="true"
     data-widget-custombutton="true" data-widget-togglebutton="true"
     data-widget-sortable="true" data-widget-deletebutton="true" role="widget" style="">
    <header role="heading">
        <span class="widget-icon"><i class="fa fa-edit"></i></span>
        <h2>@Mensagens.AccountsReceivable </h2>
        <span class="jarviswidget-loader"><i class="fa fa-refresh fa-spin"></i></span>
    </header>
    <div role="content">
        <div class="widget-body no-padding">
            <form id="formContaReceber" class="smart-form" novalidate="novalidate">
                <fieldset class="col col-xs-12 col-sm-12 col-md-12 col-lg-12">
                    <div class="row">
                        <section id="AlertaMensagens" class="col col-xs-12 col-sm-12 col-md-12 col-lg-12 no-margin"></section>
                    </div>
                    <div class="row">
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.CodigoVenda, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.CodigoVenda, new { placeholder = @Mensagens.SaleCode })
                            </label>
                        </section>
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.CodigoCliente, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.CodigoCliente, new { placeholder = @Mensagens.ClientCode })
                            </label>
                        </section>
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.DataEmissao, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.DataEmissao, new { placeholder = @Mensagens.IssuanceDate, @class = "DataMask" })
                            </label>
                        </section>
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.DataVencimento, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.DataVencimento, new { placeholder = @Mensagens.DueDate, @class = "DataMask" })
                            </label>
                        </section>
                    </div>
                    <div class="row">
                        <section class="col col-xs-12 col-sm-6 col-md-6 col-lg-6">
                            @Html.LabelFor(m => m.NomeCliente, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.NomeCliente, new { placeholder = @Mensagens.ProviderName })
                            </label>
                        </section>
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.CPFCNPJ, new { @class = "label" })
                            <label class="input">
                                @Html.TextBoxFor(m => m.CPFCNPJ, new { placeholder = @Mensagens.CPFCNPJ, @class = "CpfCnpjMask" })
                            </label>
                        </section>
                        <section class="col col-xs-12 col-sm-3 col-md-3 col-lg-3">
                            @Html.LabelFor(m => m.StatusId, new { @class = "label" })
                            <label class="select">
                                @Html.DropDownListFor(m => m.StatusId, new SelectList(ViewBag.StatusContaReceber, "Codigo", "Nome")
                                    .AddDefaultOption(Mensagens.Select))
                                <i></i>
                            </label>
                        </section>
                    </div>
                </fieldset>
                <footer>
                    <a id="PesquisarContaReceber" class="btn btn-labeled btn-primary" href="javascript:void(0);">
                        <span class="btn-label"><i class="fa fa-search"></i></span> @Mensagens.Research
                    </a>
                    <a id="SalvarContaReceber" class="btn btn-labeled btn-success" href="javascript:void(0);">
                        <span class="btn-label"><i class="fa fa-arrow-down"></i></span> @Mensagens.Receive
                    </a>
                </footer>
            </form>
            <fieldset class="col col-xs-12 col-sm-12 col-md-12 col-lg-12 WidgetContaReceber ScrollWidgetTable">
                <div class="jarviswidget jarviswidget-color-blueDark" data-widget-fullscreenbutton="false"
                     data-widget-colorbutton="false" data-widget-togglebutton="false"
                     data-widget-deletebutton="false" data-widget-editbutton="false">
                    <header>
                        <span class="widget-icon"> <i class="fa fa-table"></i> </span>
                        <h2>Tabela de Contas a Receber</h2>
                    </header>
                    <div class="ScrollTableContent">
                        <div class="widget-body no-padding">
                            <table id="datatableContaReceber" class="table table-striped table-bordered table-hover" width="100%"></table>
                        </div>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/app/Search.js"></script>
    <script src="~/js/app/Venda/ContaReceber.js"></script>
    <script>
        Portal.Mask();
        Portal.Search({
            AlertaMensagensSeletor: "#AlertaMensagens",
            BotaoPesquisarSeletor: "#PesquisarContaReceber",
            FormularioSeletor: "#formContaReceber",
            UrlDados: "@Url.Action("PesquisaContaReceber", "ContaReceber")",
            TabelaSeletor: "#datatableContaReceber",
            WidgetSeletor: ".WidgetContaReceber",
            TituloRodape: "Contas a Receber",
            InformacaoTabela: "Informe os filtros para pesquisar",
            TituloRodapeContador: "Nenhuma conta a receber",
            OrdenacaoDoCabecalho: [
                { "sTitle": "@(Mensagens.SaleCode)", "mData": "CodigoVenda", "sWidth": "15%" },
                { "sTitle": "@(Mensagens.ClientCode)", "mData": "CodigoCliente", "sWidth": "15%" },
                { "sTitle": "@(Mensagens.IssuanceDate)", "mData": "DataEmissao", "sWidth": "15%" },
                { "sTitle": "@(Mensagens.DueDate)", "mData": "DataVencimento", "sWidth": "15%" },
                { "sTitle": "@(Mensagens.ValueDocument)", "mData": "ValorDocumento", "sWidth": "20%" },
                { "sTitle": "@(Mensagens.Status)", "mData": "Status", "sWidth": "10%" },
                {
                    "sTitle": "@(Mensagens.Received + " ?")",
                    "mData": null,
                    "sClass": "smart-form",
                    "bSortable": false,
                    "sWidth": "10%",
                    "mRender": function(obj) {
                        var div = $("<div>").attr({
                            "class": "col-12"
                        });

                        var label = $("<label>").attr({
                            "class": "checkbox " + (obj.Recebido ? "state-disabled" : "")
                        });

                        var input = $("<input>").attr({
                            "type": "checkbox",
                            "name": "checkbox"
                        });

                        if (obj.Recebido) {
                            $(input).attr({
                                "checked": "checked",
                                "disabled": "disabled"
                            });
                        }

                        var i = $("<i>");

                        label.append(input);
                        label.append(i);
                        div.append(label);
                        return div[0].outerHTML;
                    }
                }
            ]
        });
        Portal.ReceberConta();
    </script>
}